pipeline {
    agent any  // Main agent block

    environment {
        WIREMOCK_PORT = '9090'  // Puerto en el que se levantará WireMock
        WIREMOCK_JAR = 'wiremock-standalone-3.10.0.jar'  // Versión de WireMock que se usará
        WIREMOCK_DIR = 'C:\\Users\\amaro\\Documents\\Giovanna\\casopractico1\\helloworld\\test' 
    }

    stages {
        stage('GetCode') {
            steps {
                echo "Executing on main agent"
                git   'https://github.com/GiovannaLeon/Giovanna.git'
            }
        }

        stage('Start WireMock') {
            steps {
                script {
                    // Levantar WireMock en segundo plano
                    echo 'Levantando WireMock...'
                    bat '''
                        start java -jar "%WIREMOCK_DIR%\\%WIREMOCK_JAR%" --port %WIREMOCK_PORT%
                    '''
                    sleep(5) // Esperar 5 segundos para asegurar que WireMock esté corriendo
                }
            }
        }

        stage('Build') {
            steps {
                echo 'No hay que hacer nada. Esto es Python'
                bat "dir"  
            }
        }

        stage('Tests') {
            parallel {
                stage('Unit') {
                    agent { label 'secondary-agent-1' } // Secondary agent 1
                    steps {
                        echo "Running on secondary-agent-1"
                        bat "whoami"
                        bat "hostname"
                      //  catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            // Set PYTHONPATH and run pytest for unit tests
                            bat ''' 
                            set PYTHONPATH=%WORKSPACE%
                            C:\\Users\\amaro\\AppData\\Local\\Programs\\Python\\Python313\\python.exe -m pytest --junitxml=result-unit.xml C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\024\\test1\\test\\unit
                            '''
                      //  }
                    }
                }

                stage('Rest') {
                    agent { label 'secondary-agent-2' } // Secondary agent 2
                    steps {
                        echo "Running on secondary-agent-2"
                        bat "whoami"
                        bat "hostname"
                       // catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            bat '''
                            set FLASK_APP=app\\api.py
                            start flask run
                            set PYTHONPATH=%WORKSPACE%
                            C:\\Users\\amaro\\AppData\\Local\\Programs\\Python\\Python313\\python.exe -m pytest --junitxml=result-rest.xml C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\024\\test1\\test\\rest
                            '''
                       // }
                    }
                }
            }
        }
        
        stage('Stop WireMock') {
            steps {
                script {
                    // Detener el proceso de WireMock
                    echo 'Deteniendo WireMock...'
                    bat '''
                        taskkill /F /IM java.exe
                    '''
                }
            }
        }

        stage('Results') {
            steps {
                echo "Executing on main agent"
                junit 'result*.xml'
            }
        }
    }
}